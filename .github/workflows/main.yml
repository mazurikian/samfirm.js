on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Paso 1: Checkout del código
    - name: Check out code
      uses: actions/checkout@v4.2.2

    # Paso 2: Configurar Node.js
    - name: Set up Node.js
      uses: actions/setup-node@v4.1.0
      with:
        node-version: 'lts/*'
        check-latest: true

    # Paso 3: Instalar dependencias
    - name: Install updated dependencies
      run: npm install

    # Paso 4: Compilar el proyecto TypeScript
    - name: Compile TypeScript
      run: npm run build

    # Paso 5: Crear un release en GitHub
    - name: Create Release on GitHub
      id: create_release
      run: |
        REPO_NAME=$(basename ${GITHUB_REPOSITORY})
        VERSION="v$(date +'%Y%m%d%H%M%S')"  # Crea una versión con la fecha y hora actual.
        RESPONSE=$(curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -d '{"tag_name": "'$VERSION'", "name": "'$VERSION'", "body": "Release description", "draft": false, "prerelease": false}' \
          https://api.github.com/repos/${GITHUB_REPOSITORY}/releases)
        echo "::set-output name=release_id::$(echo $RESPONSE | jq -r .id)"

    # Paso 6: Buscar y comprimir los archivos index.js
    - name: Find and compress index.js files
      run: |
        # Buscar todos los archivos llamados index.js
        INDEX_FILES=$(find . -type f -name "index.js")
        
        if [ -z "$INDEX_FILES" ]; then
          echo "No index.js files found."
          exit 1
        fi

        # Crear un archivo comprimido con todos los index.js encontrados
        tar -czvf index-files.tar.gz $INDEX_FILES

    # Paso 7: Subir los artefactos al release de GitHub
    - name: Upload index.js files to GitHub Release
      run: |
        REPO_NAME=$(basename ${GITHUB_REPOSITORY})
        RELEASE_ID=${{ steps.create_release.outputs.release_id }}
        
        curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Content-Type: application/octet-stream" \
          --data-binary @index-files.tar.gz \
          "https://uploads.github.com/repos/${GITHUB_REPOSITORY}/releases/${RELEASE_ID}/assets?name=index-files.tar.gz"
